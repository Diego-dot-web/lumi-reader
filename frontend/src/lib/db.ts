// import { EpubBook, IEpubMetadata } from "./epub";
// import { IDBPDatabase, openDB } from "idb";
//
// export interface EpubBookRecord {
//     /// generated by indexeddb
//     id: number;
//     metadata: IEpubMetadata;
//     file: File;
//     lastModified: number;
//
//     cover?: Blob;
//     charCount: number;
//     basePath: string;
//     xhtml: string[];
//     imgs: string[];
//     css: string[];
// }
//
// export class EpubBookDB {
//     private dbPromise: Promise<IDBPDatabase>;
//
//     constructor() {
//         this.dbPromise = openDB("epub-reader-db", 1, {
//             upgrade(db) {
//                 const store = db.createObjectStore("epubBooks", {
//                     keyPath: "id",
//                 });
//                 store.createIndex("title", "metadata.title");
//                 store.createIndex(
//                     "metadata.identifier",
//                     "metadata.identifier" /*, { unique: true }*/,
//                 );
//                 store.createIndex("lastModified", "lastModified");
//             },
//         });
//     }
//
//     async saveBook(book: EpubBook): Promise<void> {
//         const db = await this.dbPromise;
//
//         // id is assigned by the database
//         const record: Omit<EpubBookRecord, "id"> = {
//             metadata: {
//                 identifier: book.metadata.identifier,
//                 title: book.metadata.title,
//                 language: book.metadata.language,
//                 creator: book.metadata.creator,
//                 date: book.metadata.date,
//             },
//             file: book.epubFile,
//             lastModified: Date.now(),
//
//             cover: book.cover,
//             xhtml: book.xhtml,
//             css: book.css,
//             imgs: book.imgs,
//             charCount: book.charCount,
//             basePath: book.basePath
//         };
//         await db.put("epubBooks", record);
//     }
//
//     async getBookById(id: string): Promise<EpubBookRecord | undefined> {
//         const db = await this.dbPromise;
//         return db.get("epubBooks", id);
//     }
//
//     async getBookByEpubIdentifier(
//         id: string,
//     ): Promise<EpubBookRecord | undefined> {
//         const db = await this.dbPromise;
//         return db.getFromIndex("epubBooks", "metadata.identifier", id);
//     }
//
//     async getAllBooks(): Promise<EpubBookRecord[]> {
//         const db = await this.dbPromise;
//         return db.getAll("epubBooks");
//     }
//     // Add update, delete, sync-related logic here later
// }
